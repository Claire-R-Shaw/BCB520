[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/Assignment 4/Good vs. bad Assignment 4.html",
    "href": "posts/Assignment 4/Good vs. bad Assignment 4.html",
    "title": "Assignment 4",
    "section": "",
    "text": "A little bit about the data\nIn the below figure I used a heat map to show how the color of fresh beef patties changes over time. Different antioxidants and amounts were added to each treatment group.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(readxl)\nData4&lt;- read.csv(\"Data4.csv\")\n\n\nThis example shows how it is hard to compare color when hue/luminescence is similar. enjoy :)\n\n\n\nCode\nggplot(Data4,aes(x=day,y=trt,fill=a))+\n  geom_tile()+\n  scale_fill_gradient(low=\"brown\",high=\"red\")+\n  labs(\n    title = \"a* values across retail display\",\n    x = \"Day of Retail Display\",\n    y = \"a* (Reddness)\")+\n  theme_minimal()+\n  theme(\n    plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\nFigure 1: which one had more discoloration (is less red) Control on day 1 or 2.0& M on day 2?? Hard telling not knowing. We can see that Rosemary at 2.0% did prolong discoloration the best.\n\n\nline graph\nThis is a better way to show a* vales over retail display.\n\n\nCode\nggplot(Data4,aes(x=day,y=a,color=trt))+\n  geom_line(linewidth=1.5)+\n  scale_color_manual(values=c(\"yellow\",\"orange\",\"darkgreen\",\"darkgreen\",\"hotpink\",\"red\"),name = \"Antioxidants\")+\n  labs(\n    title = \"a* values across retail display\",\n    x = \"Day of Retail Display\",\n    y = \"a* (Reddness)\"\n  )+\n  theme_minimal()+\n  theme(\n    plot.title = element_text(hjust = 0.5)\n  )\n\n\n\n\n\n\n\n\n\nFigure 2: Showing it like this makes it easier to follow, you can see clear separation between treatments. The green lines are the positive controls, red is the negative control. We are mostly interested in the yellow, orange and pink lines."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Actual Hocky Project/Actual Hocky Project.html",
    "href": "posts/Actual Hocky Project/Actual Hocky Project.html",
    "title": "Actual Hocky Project",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n\nIndivdual.Skater &lt;- read.csv(\"SkaterIndividualstats.csv\")\nOnIce.Skater &lt;- read.csv(\"SkaterOnicestats.csv\")\nGoalie &lt;- read.csv(\"Goalies.csv\")\nIndividual.Skater.Rookie &lt;- read.csv(\"RookieSkaterindividual.csv\")\nOnIce.Skater.Rookie &lt;- read.csv(\"RookieSkaterOnIce.csv\")\nRookie.Goalie &lt;- read.csv(\"RookieGoalies.csv\")\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nLooking at xG Aginst\n\n# ggplot(filtered_data, aes(x = XGA, y = reorder(Player, XGA))) +\n#   geom_col(fill = \"blue\") +\n#   labs(\n#     x = \"XGA\",\n#     y = \"Player Name\",\n#     title = \"Expected Goals Against by Player\",\n#     subtitle = \"Filtered for TOI &gt; 1237\"\n#   ) +\n#   theme_minimal() +\n#   theme(\n#     panel.grid.major.y = element_blank(),\n#     panel.grid.minor = element_blank()\n#   )"
  },
  {
    "objectID": "posts/Actual Hocky Project/Actual Hocky Project.html#quarto",
    "href": "posts/Actual Hocky Project/Actual Hocky Project.html#quarto",
    "title": "Actual Hocky Project",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n\nIndivdual.Skater &lt;- read.csv(\"SkaterIndividualstats.csv\")\nOnIce.Skater &lt;- read.csv(\"SkaterOnicestats.csv\")\nGoalie &lt;- read.csv(\"Goalies.csv\")\nIndividual.Skater.Rookie &lt;- read.csv(\"RookieSkaterindividual.csv\")\nOnIce.Skater.Rookie &lt;- read.csv(\"RookieSkaterOnIce.csv\")\nRookie.Goalie &lt;- read.csv(\"RookieGoalies.csv\")\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nLooking at xG Aginst\n\n# ggplot(filtered_data, aes(x = XGA, y = reorder(Player, XGA))) +\n#   geom_col(fill = \"blue\") +\n#   labs(\n#     x = \"XGA\",\n#     y = \"Player Name\",\n#     title = \"Expected Goals Against by Player\",\n#     subtitle = \"Filtered for TOI &gt; 1237\"\n#   ) +\n#   theme_minimal() +\n#   theme(\n#     panel.grid.major.y = element_blank(),\n#     panel.grid.minor = element_blank()\n#   )"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BCB520",
    "section": "",
    "text": "Actual Hocky Project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nMar 12, 2025\n\n\nClaire Shaw\n\n\n\n\n\n\n\n\n\n\n\n\nAssignment 4\n\n\nMarks and Channels\n\n\n\n\n\n\n\n\nFeb 15, 2025\n\n\nClaire Shaw\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Hocky Project/Actual Hocky Project.html",
    "href": "posts/Hocky Project/Actual Hocky Project.html",
    "title": "Actual Hocky Project",
    "section": "",
    "text": "Indivdual.Skater &lt;- read.csv(\"SkaterIndividualstats.csv\")\nOnIce.Skater &lt;- read.csv(\"SkaterOnicestats.csv\")\nGoalies &lt;- read.csv(\"Goalies.csv\")\nIndividual.Skater.Rookie &lt;- read.csv(\"RookieSkaterindividual.csv\")\nOnIce.Skater.Rookie &lt;- read.csv(\"RookieSkaterOnIce.csv\")\nRookie.Goalie &lt;- read.csv(\"RookieGoalies.csv\")\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nLooking at SV%\n\nfiltered_goalies &lt;- Goalies %&gt;%\n  filter(GP &gt;= 25) %&gt;%\n  arrange(desc(SV.)) %&gt;%\n  slice_head(n = 20)\n\nggplot(filtered_goalies, aes(x = SV., y = reorder(Player, SV.), fill = \"red\")) +\n  geom_col() +\n  labs(\n    x = \"Save Percentage\",\n    y = \"Player Name\",\n    caption = \"Source: https://www.naturalstattrick.com/\",\n    title = \"Individual Save Percentage\",\n    subtitle = \"2024-2025 season stats as of March 4\") +\n  theme_minimal() +\n  theme(panel.grid.major.y = element_blank(),\n        panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\nTop 5: Hellebuyck Vasilevskiy Thompson Blackwood Gustavsson\nLooking at Goals saved Above Average\n\nfiltered_goalies &lt;- Goalies %&gt;%\n  filter(GP &gt;= 30) %&gt;%\n  arrange(desc(GSAA)) %&gt;%\n  slice_head(n = 20)\n\nggplot(filtered_goalies, aes(x = GSAA, y = reorder(Player, GSAA), fill = \"blue\")) +\n  geom_col() +\n  labs(\n    x = \"Goals Saved Above Average\",\n    y = \"Player Name\",\n    caption = \"Source: https://www.naturalstattrick.com/\",\n    title = \"Individual Goals Saved Above Average\",\n    subtitle = \"2024-2025 season stats as of March 4\") +\n  theme_minimal() +\n  theme(panel.grid.major.y = element_blank(),\n        panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\nTop 5: Hellebuyck Vasilevskiy Blackwood Thompson Gustavsson\nLooking at high danger goals saved above average\n\nfiltered_goalies &lt;- Goalies %&gt;%\n  filter(GP &gt;= 25) %&gt;%\n  arrange(desc(HDGSAA)) %&gt;%\n  slice_head(n = 20)\n\nggplot(filtered_goalies, aes(x = HDGSAA, y = reorder(Player, HDGSAA), fill = \"red\")) +\n  geom_col() +\n  labs(\n    x = \"HD Goals Saved Above Average\",\n    y = \"Player Name\",\n    caption = \"Source: https://www.naturalstattrick.com/\",\n    title = \"Individual HD Goal Saved Above Average\",\n    subtitle = \"2024-2025 season stats as of March 4\") +\n  theme_minimal() +\n  theme(panel.grid.major.y = element_blank(),\n        panel.grid.minor = element_blank()\n)\n\n\n\n\n\n\n\n\nTop 5: Hellebuyck Vasilevskiy Kochetkov Wolf Blackwood\nNow the hard part. What stats matters the most?\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nScale.Goalies &lt;- Goalies %&gt;%\n  filter(GP &gt; 25) %&gt;%\n  mutate(\n    scale.SV. = scale(SV.),\n    scale.GSAA = scale(GSAA),\n    scale.HDGSAA = scale(HDGSAA),\n   \n    composite.Score = scale.SV. + scale.GSAA + scale.HDGSAA\n  ) %&gt;%\n  arrange(desc(composite.Score)) %&gt;%\n  slice_head(n = 10)  \n\n\nScale.Goalies_long &lt;- Scale.Goalies %&gt;%\n  pivot_longer(\n    cols = c(scale.SV., scale.GSAA, scale.HDGSAA),\n    names_to = \"component\",\n    values_to = \"value\"\n  ) %&gt;%\n  mutate(component = factor(component, levels = c(\"scale.HDGSAA\", \"scale.GSAA\", \"scale.SV.\")))\n\n\nggplot(Scale.Goalies_long, aes(x = reorder(Player, composite.Score), y = value, fill = component)) +\n  geom_col(position = \"stack\") +\n  coord_flip() +\n  scale_fill_manual(values = c(\"scale.SV.\" = \"#FF7F0E\", \n                               \"scale.GSAA\" = \"#1F77B4\",\n                               \"scale.HDGSAA\" = \"#D62728\")) +\n  labs(\n    x = \"Player Name\",\n    y = \"Composite Score\",\n    fill = \"Component\",\n    caption = \"Source: https://www.naturalstattrick.com/\",\n    title = \"Top 10 Vezina Ranking\",\n    subtitle = \"2024-2025 season stats as of March 4\"\n  ) +\n  theme_minimal() +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\nMy Final Ballot for the Vezina Award is …\n\nConnor Hellebuyck\nAndrei Vasilevskiy\nMakenzie Blackwood\nLogan Thompson\nFilip Gustavsson\n\nI did choose Gustavsson over Wolf. Gustavsson beats wolf in SV and GSAA. While wold has higher HDGSAA, I think SV and GSAA are more important and Wolf was ranked 7th in both of those."
  }
]