{
  "hash": "541957a07203f5eb424b76aac9187cc4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Actual Hocky Project\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nIndivdual.Skater <- read.csv(\"SkaterIndividualstats.csv\")\nOnIce.Skater <- read.csv(\"SkaterOnicestats.csv\")\nGoalies <- read.csv(\"Goalies.csv\")\nIndividual.Skater.Rookie <- read.csv(\"RookieSkaterindividual.csv\")\nOnIce.Skater.Rookie <- read.csv(\"RookieSkaterOnIce.csv\")\nRookie.Goalie <- read.csv(\"RookieGoalies.csv\")\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n\nLooking at SV%\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_goalies <- Goalies %>%\n  filter(GP >= 25) %>%\n  arrange(desc(SV.)) %>%\n  slice_head(n = 20)\n\nggplot(filtered_goalies, aes(x = SV., y = reorder(Player, SV.), fill = \"red\")) +\n  geom_col() +\n  labs(\n    x = \"Save Percentage\",\n    y = \"Player Name\",\n    caption = \"Source: https://www.naturalstattrick.com/\",\n    title = \"Individual Save Percentage\",\n    subtitle = \"2024-2025 season stats as of March 4\") +\n  theme_minimal() +\n  theme(panel.grid.major.y = element_blank(),\n        panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Actual-Hocky-Project_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nTop 5: \nHellebuyck\nVasilevskiy\nThompson\nBlackwood\nGustavsson\n\n\n\nLooking at Goals saved Above Average \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_goalies <- Goalies %>%\n  filter(GP >= 30) %>%\n  arrange(desc(GSAA)) %>%\n  slice_head(n = 20)\n\nggplot(filtered_goalies, aes(x = GSAA, y = reorder(Player, GSAA), fill = \"blue\")) +\n  geom_col() +\n  labs(\n    x = \"Goals Saved Above Average\",\n    y = \"Player Name\",\n    caption = \"Source: https://www.naturalstattrick.com/\",\n    title = \"Individual Goals Saved Above Average\",\n    subtitle = \"2024-2025 season stats as of March 4\") +\n  theme_minimal() +\n  theme(panel.grid.major.y = element_blank(),\n        panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Actual-Hocky-Project_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nTop 5: \nHellebuyck\nVasilevskiy\nBlackwood\nThompson\nGustavsson\n\n\n\nLooking at high danger goals saved above average \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_goalies <- Goalies %>%\n  filter(GP >= 25) %>%\n  arrange(desc(HDGSAA)) %>%\n  slice_head(n = 20)\n\nggplot(filtered_goalies, aes(x = HDGSAA, y = reorder(Player, HDGSAA), fill = \"red\")) +\n  geom_col() +\n  labs(\n    x = \"HD Goals Saved Above Average\",\n    y = \"Player Name\",\n    caption = \"Source: https://www.naturalstattrick.com/\",\n    title = \"Individual HD Goal Saved Above Average\",\n    subtitle = \"2024-2025 season stats as of March 4\") +\n  theme_minimal() +\n  theme(panel.grid.major.y = element_blank(),\n        panel.grid.minor = element_blank()\n)\n```\n\n::: {.cell-output-display}\n![](Actual-Hocky-Project_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nTop 5:\nHellebuyck\nVasilevskiy\nKochetkov\nWolf\nBlackwood\n\nNow the hard part. What stats matters the most? \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nScale.Goalies <- Goalies %>%\n  filter(GP > 25) %>%\n  mutate(\n    scale.SV. = scale(SV.),\n    scale.GSAA = scale(GSAA),\n    scale.HDGSAA = scale(HDGSAA),\n   \n    composite.Score = scale.SV. + scale.GSAA + scale.HDGSAA\n  ) %>%\n  arrange(desc(composite.Score)) %>%\n  slice_head(n = 10)  \n\n\nScale.Goalies_long <- Scale.Goalies %>%\n  pivot_longer(\n    cols = c(scale.SV., scale.GSAA, scale.HDGSAA),\n    names_to = \"component\",\n    values_to = \"value\"\n  ) %>%\n  mutate(component = factor(component, levels = c(\"scale.HDGSAA\", \"scale.GSAA\", \"scale.SV.\")))\n\n\nggplot(Scale.Goalies_long, aes(x = reorder(Player, composite.Score), y = value, fill = component)) +\n  geom_col(position = \"stack\") +\n  coord_flip() +\n  scale_fill_manual(values = c(\"scale.SV.\" = \"#FF7F0E\", \n                               \"scale.GSAA\" = \"#1F77B4\",\n                               \"scale.HDGSAA\" = \"#D62728\")) +\n  labs(\n    x = \"Player Name\",\n    y = \"Composite Score\",\n    fill = \"Component\",\n    caption = \"Source: https://www.naturalstattrick.com/\",\n    title = \"Top 10 Vezina Ranking\",\n    subtitle = \"2024-2025 season stats as of March 4\"\n  ) +\n  theme_minimal() +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Actual-Hocky-Project_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nMy Final Ballot for the Vezina Award is ...\n\n1. Connor Hellebuyck \n2. Andrei Vasilevskiy\n3. Makenzie Blackwood \n4. Logan Thompson\n5. Filip Gustavsson\n\nI did choose Gustavsson over Wolf. Gustavsson beats wolf in SV and GSAA. While wold has higher HDGSAA, I think SV and GSAA are more important and Wolf was ranked 7th in both of those. \n\n",
    "supporting": [
      "Actual-Hocky-Project_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}